@using TodoList.Common.Utilities
@using TodoList.Models.Transient
@model ReportIndexVm

<form asp-action="ShowTaskOnStaffReport">
    @Html.LabelFor(m => m.TaskOnStaffStaffId, new {@class = "control-label"})
    @Html.DropDownListFor(
        m => m.TaskOnStaffStaffId,
        new SelectList(Model.Staffs, nameof(Staff.Id), nameof(Staff.FullName)),
        null,
        new {@class = "form-control"})

    @Html.LabelFor(m => m.TaskOnStaffStartDate, new {@class = "control-label"})
    @Html.EditorFor(m => m.TaskOnStaffStartDate, new {htmlAttributes = new {@class = "form-control"}})

    @Html.LabelFor(m => m.TaskOnStaffEndDate, new {@class = "control-label"})
    @Html.EditorFor(m => m.TaskOnStaffEndDate, new {htmlAttributes = new {@class = "form-control"}})

    <input type="submit" value="Xuất báo cáo" class="btn btn-primary"/>

    <table>
        <thead>
        <tr>
            @{
                var emptyReportData = new TaskOnStaffReportData();
            }
            <th>@Html.DisplayNameFor(m => emptyReportData.TodoTask.Name)</th>
            <th>@Html.DisplayNameFor(m => emptyReportData.TodoTask.StaffId)</th>
            <th>@Html.DisplayNameFor(m => emptyReportData.Status)</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.TaskOnStaffReport)
        {
            <tr>
                <td>@Html.DisplayFor(m => item.TodoTask.Name)</td>
                <td>@Html.DisplayFor(m => item.TodoTask.Staff.FullName)</td>
                <td>@Html.DisplayFor(m => item.Status)</td>
            </tr>
        }
        </tbody>
    </table>
</form>