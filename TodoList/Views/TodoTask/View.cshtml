@model TodoTaskViewVm

@{
    ViewData["Title"] = @Html.ViewData.Model.TodoTask.Name;
}

<h6>
    <a asp-controller="TodoTask" asp-action="Index">
        Trở về Danh sách Công việc
    </a>
</h6>

<h2 class="d-flex flex-row">
    <div>
        @Html.DisplayFor(m => m.TodoTask.Name)
        @Html.DisplayFor(model => model.TodoTask.Access, "TodoTask_TaskAccess")
    </div>
    @if (Model.IsCreatedByMe)
    {
        <a asp-action="Edit" asp-route-id="@Model.TodoTask.Id" class="d-flex text-decoration-none">
            <button type="button" class="btn btn-outline-primary">Sửa thông tin</button>
        </a>
    }
</h2>
<div class="form-group small">
    @Html.DisplayNameFor(m => m.TodoTask.CreatedById)@Html.Raw(":&nbsp")
    <strong>
        @Html.DisplayFor(m => m.TodoTask.CreatedBy.FullName)
    </strong>
</div>

<div class="row">
    <div class="col-lg-8">
        <div class="form-group">
            @Html.DisplayNameFor(m => m.TodoTask.StaffId)@Html.Raw(":&nbsp")
            <strong>
                @Html.DisplayFor(m => m.TodoTask.Staff.FullName)
            </strong>
        </div>
        <div class="form-row">
            <div class="form-group col">
                @Html.LabelFor(m => m.TodoTask.StartDate, new {@class = "control-label"})
                @Html.EditorFor(m => m.TodoTask.StartDate, new {htmlAttributes = new {@class = "form-control", disabled = "disabled"}})
            </div>
            <div class="form-group col">
                @Html.LabelFor(m => m.TodoTask.EndDate, new {@class = "control-label"})
                @Html.EditorFor(m => m.TodoTask.EndDate, new {htmlAttributes = new {@class = "form-control", disabled = "disabled"}})
            </div>
        </div>

        <hr>

        @{
            var completeViewModel = new TodoTaskCompleteVm
            {
                TodoTaskId = Model.TodoTask.Id,
                TodoTaskStatus = Model.TodoTask.Status,
                TodoTaskCompleteDate = Model.TodoTask.CompleteDate,
                IsAssigned = Model.IsAssignedToMe
            };
        }
        @await Html.PartialAsync("_View_Status", completeViewModel)

        <hr>

        @await Component.InvokeAsync("CommentList", new {todoTask = Model.TodoTask, staff = Model.CurrentStaff})

        <hr>
    </div>
    <div class="col-lg-4">
        <div class="form-group">
            @Html.LabelFor(m => m.TodoTask.TodoTaskPartners, new {@class = "control-label"})
            <table class="table table-hover">
                <thead>
                <tr>
                    <th>@Html.DisplayNameFor(m => m.TodoTask.Staff.FullName)</th>
                    <th>@Html.DisplayNameFor(m => m.TodoTask.Staff.Level)</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var todoTaskPartner in Model.TodoTask.TodoTaskPartners)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(m => todoTaskPartner.Staff.FullName)
                        </td>
                        <td>
                            @Html.DisplayFor(m => todoTaskPartner.Staff.Level)
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>
<div class="row mt-3">
    <div class="col">
    </div>
</div>